name: release

on:
  workflow_dispatch:
  push:
    tags:
      - "v0.*"
env:
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}

# concurrency:
#   group: app-release
#   cancel-in-progress: false

jobs:
  create-release:
    runs-on: ubuntu-20.04
    outputs:
      release-id: ${{ steps.create-release.outputs.result }}

    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./app/kube-knots/package.json').version")" >> $GITHUB_ENV
      - name: create release
        id: create-release
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.PACKAGE_VERSION}`,
              name: `v${process.env.PACKAGE_VERSION}`,
              draft: true,
              prerelease: false,
              generate_release_notes: true
            })

            return data.id
  build-tauri:
    needs: create-release
    defaults:
      run:
        working-directory: app/kube-knots
    strategy:
      fail-fast: false
      matrix:
        platform:
          # - macos-latest
          - windows-latest
          - ubuntu-20.04
        include:
          # - platform: macos-latest
          #   target: universal-apple-darwin
          - platform: macos-latest
            target: x86_64-apple-darwin
          - platform: macos-latest
            target: aarch64-apple-darwin

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install aarch target for macos
        run: rustup target add aarch64-apple-darwin
        if: startsWith(matrix.platform, 'macos')
      - name: install dependencies (ubuntu only)
        if: startsWith(matrix.platform, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install app dependencies
        run: yarn install
      - name: release for macos builds
        # update to v0 after this PR is released https://github.com/tauri-apps/tauri-action/pull/399
        uses: tauri-apps/tauri-action@dev
        if: startsWith(matrix.platform, 'macos')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release-id }}
          args: --target ${{ matrix.target }}
      - name: release for non-macos builds
        uses: tauri-apps/tauri-action@v0
        if: startsWith(matrix.platform, 'macos') != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release-id }}
  publish-release:
    runs-on: ubuntu-20.04
    needs: [create-release, build-tauri]

    steps:
      - name: publish release
        id: publish-release
        uses: actions/github-script@v6
        env:
          releaseId: ${{ needs.create-release.outputs.release-id }}
        with:
          script: |
            github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: process.env.releaseId,
              draft: false,
              prerelease: false
            })

  update-gist:
    runs-on: ubuntu-20.04
    needs: [create-release, publish-release]

    steps:
      - uses: actions/checkout@v3
      - name: update gist
        id: publish-release
        uses: actions/github-script@v6
        env:
          releaseId: ${{ needs.create-release.outputs.release-id }}
          gistId: b7804a3afa732f578ea0c6b73b9a74f0
          gistToken: ${{ secrets.GIST_TOKEN }}
        with:
          script: |
            const script = require('./.github/helpers/update-gist.js');
            script({ github, context, fetch, core });
